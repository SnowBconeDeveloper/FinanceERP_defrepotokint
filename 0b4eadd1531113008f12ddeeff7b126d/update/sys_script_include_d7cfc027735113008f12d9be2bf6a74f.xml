<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>sn_fcms_intg.ServiceElementMapUtil</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ServiceElementMapUtil</name>
        <script><![CDATA[var ServiceElementMapUtil = Class.create();
ServiceElementMapUtil.prototype = {
	initialize: function() {},

	createElementMapping: function(serviceMapSysID, elements) {
		var order = 10;
		var serviceMap = this.sysID;
		elements.forEach(function(element) {
			var gr = new GlideRecord(IntgConstants.SYS_CLASS_SERVICE_ELEMENT_MAP);
			gr.initialize();
			gr.setNewGuidValue(element.sys_id);
			gr.setValue('service_map', serviceMapSysID);
			gr.setValue('element', element.element);
			gr.setValue('type', element.type);
			gr.setValue('order', order);
			
			if ( !gs.nil(element.parent) ) {
				gr.setValue('parent', element.parent);
			}
			if (element.advance){
				gr.setValue('advance', element.advance);
				gr.setValue('script', element.script);
			}
			if(element.maintain_order){
				gr.setValue('order_by', element.order_by);
				gr.setValue('order_type', element.order_type);
			}	
			if (element.condition)
				gr.setValue('condition', element.condition);
			if (element.foreign_key)
				gr.setValue('foreign_key', element.foreign_key);
			if (element.source_field)
				gr.setValue('source_field', element.source_field);
			if (element.source_table)
				gr.setValue('source_table', element.source_table);
			gr.insert();
			order += 10;
		});
	},

	copyElementMapping: function(sourceServiceMapSysID, targetServiceMapSysID) {
		var oldNewSysIDMap = {};
		var elementMapStructure = ElementMapStructure.build(sourceServiceMapSysID);
		var elements = elementMapStructure.getElementMaps();
		elements.forEach(function(element) {
			var oldSysID = element.sys_id;
			element.sys_id = gs.generateGUID(element);
			element.service_map = targetServiceMapSysID;
			oldNewSysIDMap[oldSysID] = element.sys_id;
		});

		elements.forEach(function(element) {
			element.parent = oldNewSysIDMap[element.parent];
		});

		this.createElementMapping(targetServiceMapSysID, elements);
	},

	clearElementMapping: function(serviceMapSysID) {
		var gr = new GlideRecord(IntgConstants.SYS_CLASS_SERVICE_ELEMENT_MAP);
		gr.addQuery('service_map', serviceMapSysID);
		gr.query();
		gr.setWorkflow(false);
		gr.deleteMultiple();
	},

	updateChildSourceTable: function(parentSysID, sourceTable) {
		var gr = new GlideRecord(IntgConstants.SYS_CLASS_SERVICE_ELEMENT_MAP);
		gr.addQuery('parent', parentSysID);
		gr.query();
		gr.setValue('source_table', sourceTable);
		gr.setWorkflow(false);
		gr.updateMultiple();
	},

	type: 'ServiceElementMapUtil'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-04-11 23:53:45</sys_created_on>
        <sys_id>d7cfc027735113008f12d9be2bf6a74f</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>ServiceElementMapUtil</sys_name>
        <sys_package display_value="Finance - ERP Integration" source="sn_fcms_intg">0b4eadd1531113008f12ddeeff7b126d</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Finance - ERP Integration">0b4eadd1531113008f12ddeeff7b126d</sys_scope>
        <sys_update_name>sys_script_include_d7cfc027735113008f12d9be2bf6a74f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-02-07 01:46:33</sys_updated_on>
    </sys_script_include>
</record_update>
