<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_transform_map">
    <sys_transform_map action="INSERT_OR_UPDATE">
        <active>true</active>
        <copy_empty_fields>false</copy_empty_fields>
        <create_new_record_on_empty_coalesce_fields>false</create_new_record_on_empty_coalesce_fields>
        <enforce_mandatory_fields>No</enforce_mandatory_fields>
        <name>Ledger Account Group Excel Upload transform map</name>
        <order>100</order>
        <run_business_rules>true</run_business_rules>
        <run_script>true</run_script>
        <script><![CDATA[(function transformRow(source, target, map, log, isUpdate) {

    function areValuesSame(field1, field2, field3) {
        var label1 = target[field1].getLabel();
        var label2 = target[field2].getLabel();
        var label3 = target[field3].getLabel();
        if (!gs.nil(target.getValue(field1)) && target.getValue(field1) == target.getValue(field2)) {
            log.error(gs.getMessage('{0}, {1} should not have same values', [label1, label2]));
            ignore = true;
        } else if (!gs.nil(target.getValue(field3)) && target.getValue(field1) == target.getValue(field3)) {
            log.error(gs.getMessage('{0}, {1} should not have same values', [label1, label3]));
            ignore = true;
        } else if (!gs.nil(target.getValue(field2)) && target.getValue(field2) == target.getValue(field3)) {
            log.error(gs.getMessage('{0}, {1} should not have same values', [label2, label3]));
            ignore = true;
        }
    }

    if (GlidePluginManager.isActive('x_trint_recon')) {
        areValuesSame('recon_owner', 'recon_reviewer', 'recon_approver');
        areValuesSame('recon_owner_group', 'recon_reviewer_group', 'recon_approver_group');

        if (!gs.nil(target.getValue(target.getValue('recon_currency_type'))))
            target.setValue('recon_currency', target.getValue(target.getValue('recon_currency_type')));
        else
            target.setValue('recon_currency', '');

        if (target.getValue('recon_frequency') == 'monthly')
            target.setValue('applicable_periods', '');
        else {
            var response = new sn_fin.ValidateApplicablePeriods().validate(target.getValue('recon_frequency'), target.getValue('applicable_periods'));
            if (response.success == false) {
                target.setValue('applicable_periods', '');
                target.setValue('recon_frequency', 'monthly');
            }
        }
    }

})(source, target, map, log, action === "update");]]></script>
        <source_table>sn_fcms_intg_gl_group_load_data</source_table>
        <sys_class_name>sys_transform_map</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-04-17 13:57:17</sys_created_on>
        <sys_id>4473292053d41010ba07ddeeff7b1225</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Ledger Account Group Excel Upload transform map</sys_name>
        <sys_package display_value="Finance - ERP Integration" source="sn_fcms_intg">0b4eadd1531113008f12ddeeff7b126d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Finance - ERP Integration">0b4eadd1531113008f12ddeeff7b126d</sys_scope>
        <sys_update_name>sys_transform_map_4473292053d41010ba07ddeeff7b1225</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-05-12 05:12:02</sys_updated_on>
        <target_table>sn_fin_gl_group</target_table>
    </sys_transform_map>
</record_update>
