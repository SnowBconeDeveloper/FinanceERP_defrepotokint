<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_fcms_intg_erp_role_map</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sn_fcms_intg_erp_role_map">shadow_rolesVALCHANGES^EQ<item endquery="false" field="shadow_roles" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Add/Remove shadow roles in user mapping</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var preShadowRoles = (previous.shadow_roles && (previous.shadow_roles != current.shadow_roles)) ? previous.shadow_roles.split(',') : [];
    var curShadowRoles = current.shadow_roles ? current.shadow_roles.split(',') : [];
    var removeShadowRoles = preShadowRoles.filter(function(role) {
        return curShadowRoles.join().indexOf(role) == -1;
    });

    var addShadowRoles = curShadowRoles.filter(function(role) {
        return preShadowRoles.join().indexOf(role) == -1;
    });

    var erpSource = new ErpSourceConfig(current.source.fin_erp);
    var erpUserMapper = new ErpUserMapper(erpSource);
    var userIds = erpUserMapper.getAllUsersWithErpRole(current.getValue('role'));

    if (addShadowRoles.length) {
        erpUserMapper.assignRole('', userIds, addShadowRoles);
        var roleManager = new RoleManager(addShadowRoles.join());
        roleManager.assignRoleToUsers(userIds);
    }

    if (removeShadowRoles.length)
        erpUserMapper.revokeRole('', userIds, removeShadowRoles);

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-08-02 17:23:46</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0d435c550b8b3300aa712f4193673ad3</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>Add/Remove shadow roles in user mapping</sys_name>
        <sys_overrides/>
        <sys_package display_value="Finance - ERP Integration" source="sn_fcms_intg">0b4eadd1531113008f12ddeeff7b126d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Finance - ERP Integration">0b4eadd1531113008f12ddeeff7b126d</sys_scope>
        <sys_update_name>sys_script_0d435c550b8b3300aa712f4193673ad3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-08-06 15:58:02</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=0d435c550b8b3300aa712f4193673ad3"/>
</record_update>
